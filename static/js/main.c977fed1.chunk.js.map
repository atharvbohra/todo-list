{"version":3,"sources":["TodoList.js","Form.js","App.js","index.js"],"names":["TodoItems","props","content","listItems","map","item","index","react_default","a","createElement","key","id","listIdx","className","onClick","updateListItem","onDragStart","event","draggable","heading","type","value","style","float","background","padding","color","stopPropagation","deleteListItem","description","onDragOver","onDrop","display","margin","handleAddItemClick","TodoList","TodoList_TodoItems","this","React","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","_event$target","target","name","setState","defineProperty","handleSubmit","state","length","initialState","window","confirm","_this2","fontWeight","marginBottom","onChange","App","addNewList","listData","concat","toConsumableArray","evt","bshowInput","listSelected","listItemIdx","listItemSel","splice","handleListItemSubmit","listItem","console","log","updatedListArr","temp","listId","listItemId","dataTransfer","setData","preventDefault","dropListId","dragListId","getData","dragItemId","bind","assertThisInitialized","src_Form","todoLists","src_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c977fed1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoItems = (props) => {\r\n    const content = props.listItems.map((item, index) => {\r\n        return (\r\n            <div\r\n                key={index} id={props.listIdx}\r\n                className = 'listText'\r\n                onClick={() => props.updateListItem(props.listIdx,index)}\r\n                onDragStart={(event)=>props.onDragStart(event, props.listIdx, index)}\r\n                draggable\r\n            >\r\n                <span className='heading'>{item.heading}</span>\r\n                <input id={props.listIdx}\r\n                    type='button'\r\n                    value='DEL'\r\n                    style={{float:'right',background:'red',padding:'3px',color:'white'}}\r\n                    onClick={(event) => {\r\n                        event.stopPropagation();\r\n                        props.deleteListItem(props.listIdx, index);\r\n                    }}\r\n                />\r\n                <div className='description'>{item.description}</div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='listContainer'\r\n            onDragOver={(event)=>props.onDragOver(event, props.listIdx)}\r\n            onDrop={(event)=>props.onDrop(event, props.listIdx)}\r\n        >\r\n            {content}\r\n            <input id={props.listIdx} \r\n                style={{display:'table',margin:'1.3rem auto 0.4rem',background:'green',padding:'4px',color:'white'}}\r\n                type='button' value='+' onClick={(event)=>props.handleAddItemClick(event)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n    render() {\r\n        return (\r\n            <TodoItems\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            heading: '',\r\n            description: ''\r\n        }\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.heading.length && this.state.description.length) {\r\n            this.props.handleSubmit(this.state);\r\n            this.setState(this.initialState);\r\n        } else {\r\n            window.confirm(\"Please enter valid input !!! Try again\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='form'>\r\n                <label style={{display: 'block', fontWeight:'bold'}}>Heading</label>\r\n                <input style={{ marginBottom: '0.3rem' }} type='text' name='heading'\r\n                    value={this.state.heading} onChange={(event) => this.handleChange(event)} />\r\n                <label style={{display: 'block',fontWeight:'bold'}}>Description</label>\r\n                <input type='text' name='description'\r\n                    value={this.state.description} onChange={(event) => this.handleChange(event)} />\r\n                <input style={{ margin: '0.6rem 3.5rem', display: 'block', padding:'4px', background: 'blue', color:'#fff'}} type='button'\r\n                    value='Submit' onClick={() => this.handleSubmit()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport TodoList from './TodoList';\nimport Form from './Form';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listData: [[]],\n      listSelected: 0,\n      listItemSel: -1,\n      bshowInput: false\n    }\n    this.updateListItem = this.updateListItem.bind(this);\n    this.deleteListItem = this.deleteListItem.bind(this);\n    this.handleAddItemClick = this.handleAddItemClick.bind(this);\n    this.handleListItemSubmit = this.handleListItemSubmit.bind(this);\n    this.onDragStart = this.onDragStart.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  addNewList = () => {\n    this.setState({\n      listData: [...this.state.listData, []],\n    })\n  }\n\n  handleAddItemClick = (evt) => {\n    this.setState({\n      bshowInput: true,\n      listSelected: evt.target.id,\n    })\n  }\n\n  updateListItem = (listIdx, listItemIdx) => {\n    this.setState({\n      bshowInput: true,\n      listSelected: listIdx,\n      listItemSel: listItemIdx,\n    })\n  }\n\n  deleteListItem = (listIdx, listItemIdx) => {\n    this.state.listData[listIdx].splice(listItemIdx,1);\n    this.setState({\n      listData: this.state.listData\n    })\n  }\n\n  handleListItemSubmit = (listItem) => {\n    console.log(\"Submit\");\n    let updatedListArr = [];\n    if (this.state.listItemSel !== -1) {\n      let temp = this.state.listData;\n      temp[this.state.listSelected][this.state.listItemSel] = listItem;\n      this.setState({\n        listData: temp,\n        bshowInput: false,\n        listItemSel: -1,\n      })\n    } else {\n      updatedListArr = [...this.state.listData[this.state.listSelected], listItem];\n      this.state.listData.splice(this.state.listSelected,1,updatedListArr);\n      this.setState({\n        listData: this.state.listData,\n        bshowInput: false,\n        listItemSel: -1,\n      })\n    }\n  }\n\n  onDragStart = (evt, listId, listItemId) => {\n    evt.dataTransfer.setData(\"dragListId\", listId);\n    evt.dataTransfer.setData(\"dragItemId\", listItemId);\n  }\n\n  onDragOver = evt => {\n    evt.preventDefault();\n  }\n\n  onDrop = (evt,dropListId) => {\n    evt.stopPropagation();\n    let dragListId = evt.dataTransfer.getData('dragListId');\n    let dragItemId = evt.dataTransfer.getData('dragItemId');\n    let listItem = this.state.listData[dragListId][dragItemId];\n    let updatedListArr = [...this.state.listData[dropListId],listItem];\n    this.state.listData.splice(dropListId,1,updatedListArr);\n    this.deleteListItem(dragListId,dragItemId);\n    this.setState({\n      listData: this.state.listData\n    });\n  }\n\n  render() {\n    if (!this.state.bshowInput) {\n      const todoLists = this.state.listData.map((item,index) => {\n        return (\n          <TodoList\n            key = {index}\n            listIdx = {index}\n            listItems = {this.state.listData[index]}\n            updateListItem = {this.updateListItem}\n            deleteListItem = {this.deleteListItem}\n            handleAddItemClick = {this.handleAddItemClick}\n            onDragStart = {this.onDragStart}\n            onDrop = {this.onDrop}\n            onDragOver = {this.onDragOver}\n          />\n        )\n      })\n\n      return (\n        <div>\n          <input style={{margin:'0rem 90vw',background:'blue',padding:'4px',color:'white'}} \n            type='button' value='Add List' onClick={()=>this.addNewList()} />\n          {todoLists}\n        </div>\n      )\n    } else {\n      return <Form handleSubmit={this.handleListItemSubmit} /> \n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/App.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}